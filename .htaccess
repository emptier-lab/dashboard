# Apache .htaccess configuration for empty.rocks/tv
# Handles redirects, HTTPS enforcement, and SPA routing

# Enable URL rewriting
RewriteEngine On

# Force HTTPS on empty.rocks domain
RewriteCond %{HTTP_HOST} ^(www\.)?empty\.rocks$ [NC]
RewriteCond %{HTTPS} off
RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]

# Handle www to non-www redirect for consistency
RewriteCond %{HTTP_HOST} ^www\.empty\.rocks$ [NC]
RewriteRule ^(.*)$ https://empty.rocks/$1 [R=301,L]

# Redirect root domain to /tv/
RewriteCond %{HTTP_HOST} ^empty\.rocks$ [NC]
RewriteRule ^$ /tv/ [R=301,L]

# Handle empty.tv path redirects
RewriteCond %{HTTP_HOST} ^empty\.rocks$ [NC]
RewriteRule ^empty\.tv/tv/(.*)$ /tv/$1 [R=301,L]
RewriteCond %{HTTP_HOST} ^empty\.rocks$ [NC]
RewriteRule ^empty\.tv/(.*)$ /tv/$1 [R=301,L]
RewriteCond %{HTTP_HOST} ^empty\.rocks$ [NC]
RewriteRule ^empty\.tv/?$ /tv/ [R=301,L]

# Vue.js SPA routing - serve index.html for all /tv/ routes
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_URI} ^/tv/
RewriteRule ^tv/.*$ /tv/index.html [L]

# Security headers
<IfModule mod_headers.c>
    # XSS Protection
    Header always set X-XSS-Protection "1; mode=block"

    # Prevent MIME type sniffing
    Header always set X-Content-Type-Options "nosniff"

    # Clickjacking protection
    Header always set X-Frame-Options "SAMEORIGIN"

    # Referrer policy
    Header always set Referrer-Policy "strict-origin-when-cross-origin"

    # Content Security Policy (adjust as needed)
    Header always set Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; font-src 'self' https:; connect-src 'self' https:;"
</IfModule>

# Compression for better performance
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE application/json
</IfModule>

# Browser caching for static assets
<IfModule mod_expires.c>
    ExpiresActive On

    # JavaScript and CSS
    ExpiresByType application/javascript "access plus 1 year"
    ExpiresByType text/css "access plus 1 year"

    # Images
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/jpg "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    ExpiresByType image/svg+xml "access plus 1 year"
    ExpiresByType image/webp "access plus 1 year"
    ExpiresByType image/ico "access plus 1 year"

    # Fonts
    ExpiresByType font/woff "access plus 1 year"
    ExpiresByType font/woff2 "access plus 1 year"
    ExpiresByType application/font-woff "access plus 1 year"
    ExpiresByType application/font-woff2 "access plus 1 year"

    # HTML (short cache for SPA)
    ExpiresByType text/html "access plus 1 hour"
</IfModule>

# Cache-Control headers
<IfModule mod_headers.c>
    # Cache static assets
    <FilesMatch "\.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|webp)$">
        Header set Cache-Control "public, max-age=31536000, immutable"
    </FilesMatch>

    # Don't cache HTML files heavily (for SPA updates)
    <FilesMatch "\.html$">
        Header set Cache-Control "public, max-age=3600"
    </FilesMatch>
</IfModule>

# Prevent access to sensitive files
<Files ~ "^\.">
    Order allow,deny
    Deny from all
</Files>

<Files "package.json">
    Order allow,deny
    Deny from all
</Files>

<Files "package-lock.json">
    Order allow,deny
    Deny from all
</Files>

# Error pages (optional)
ErrorDocument 404 /tv/index.html
